name: Publish Package to npm

# リリースが作成されたときに実行
on:
  release:
    types: [published]

# リポジトリへの書き込み権限を付与
permissions:
  contents: write

jobs:
  publish:
    runs-on: ubuntu-latest

    steps:
      # コードをチェックアウト
      - name: Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          ref: ${{ github.event.repository.default_branch }}

      # Node.js環境のセットアップ
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22.x'
          registry-url: 'https://registry.npmjs.org'

      # 依存関係のインストール
      - name: Install dependencies
        run: npm ci

      # TypeScriptの型チェック
      - name: TypeScript type check
        run: npm run type-check

      # Biomeでコード品質チェック
      - name: Code quality check
        run: npm run ci

      # プロジェクトのビルド
      - name: Build project
        run: npm run build

      # ビルド結果の確認
      - name: Verify build output
        run: |
          if [ ! -f "dist/cli.js" ]; then
            echo "❌ Build failed: dist/cli.js not found"
            exit 1
          fi
          echo "✅ Build successful: dist/cli.js exists"

      # package.jsonのバージョンをリリースタグに合わせて更新
      - name: Update package.json version
        run: |
          TAG="${{ github.event.release.tag_name }}"
          echo "📦 Updating package.json version to $TAG"
          npm version "$TAG" --no-git-tag-version

      # 更新されたpackage.jsonをコミット・プッシュ
      - name: Commit version update
        run: |
          TAG="${{ github.event.release.tag_name }}"
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add package.json package-lock.json
          git commit -m "🔖 Update package.json to version $TAG"
          git push origin ${{ github.event.repository.default_branch }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # npmに公開
      - name: Publish to npm
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}