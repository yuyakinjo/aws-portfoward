name: Dependabot Auto-Merge

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  # dependabot PRかどうかを判定
  check-dependabot:
    name: Check if Dependabot PR
    runs-on: ubuntu-latest
    outputs:
      is-dependabot: ${{ steps.check.outputs.is-dependabot }}
      is-dev-dependency: ${{ steps.check.outputs.is-dev-dependency }}
    steps:
      - name: Check if PR is from dependabot
        id: check
        run: |
          echo "Checking PR author: ${{ github.event.pull_request.user.login }}"
          echo "PR title: ${{ github.event.pull_request.title }}"

          # dependabot かどうかをチェック
          if [[ "${{ github.event.pull_request.user.login }}" == "dependabot[bot]" ]]; then
            echo "is-dependabot=true" >> $GITHUB_OUTPUT
            echo "✅ This is a dependabot PR"

            # 開発パッケージかどうかをチェック（グループ名で判定）
            if [[ "${{ github.event.pull_request.title }}" =~ dev-tools|test-tools ]]; then
              echo "is-dev-dependency=true" >> $GITHUB_OUTPUT
              echo "✅ This is a dev dependency update"
            else
              echo "is-dev-dependency=false" >> $GITHUB_OUTPUT
              echo "ℹ️ This is not a dev dependency update"
            fi
          else
            echo "is-dependabot=false" >> $GITHUB_OUTPUT
            echo "ℹ️ This is not a dependabot PR"
          fi

  # テストを実行
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    needs: check-dependabot
    if: needs.check-dependabot.outputs.is-dependabot == 'true' && needs.check-dependabot.outputs.is-dev-dependency == 'true'

    permissions:
      contents: read
      pull-requests: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '24.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run TypeScript type check
        run: npm run type-check

      - name: Build project
        run: npm run build

      - name: Run tests with coverage
        env:
          AWS_REGION: us-east-1
          CI: true
        run: npm run test:coverage

      - name: Test CLI commands
        run: |
          node dist/cli.js --help
          node dist/cli.js connect --help
          node dist/cli.js exec --help
          node dist/cli.js enable-exec --help
          node dist/cli.js --version

  # 自動マージを実行
  auto-merge:
    name: Auto-merge dependabot PR
    runs-on: ubuntu-latest
    needs: [check-dependabot, test]
    if: needs.check-dependabot.outputs.is-dependabot == 'true' && needs.check-dependabot.outputs.is-dev-dependency == 'true' && needs.test.result == 'success'

    permissions:
      contents: write
      pull-requests: write

    steps:
      - name: Enable auto-merge
        run: |
          echo "🚀 All tests passed! Enabling auto-merge for dependabot PR"
          gh pr merge --auto --squash "${{ github.event.pull_request.number }}"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GH_REPO: ${{ github.repository }}

      - name: Add comment
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '🤖 **自動マージが有効になりました**\n\n✅ すべてのテストが成功しました\n🔄 必要な承認を得られ次第、自動的にマージされます'
            })

  # 自動マージをスキップした場合の通知
  skip-auto-merge:
    name: Skip auto-merge notification
    runs-on: ubuntu-latest
    needs: [check-dependabot, test]
    if: needs.check-dependabot.outputs.is-dependabot == 'true' && (needs.check-dependabot.outputs.is-dev-dependency == 'false' || needs.test.result != 'success')

    permissions:
      pull-requests: write

    steps:
      - name: Add skip comment
        uses: actions/github-script@v7
        with:
          script: |
            let reason = '';
            if ('${{ needs.check-dependabot.outputs.is-dev-dependency }}' === 'false') {
              reason = '📦 本番依存関係のため、手動確認が必要です';
            } else if ('${{ needs.test.result }}' !== 'success') {
              reason = '❌ テストが失敗したため、自動マージをスキップしました';
            }

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `🤖 **自動マージをスキップしました**\n\n${reason}\n\n手動でのレビューと承認をお願いします。`
            })